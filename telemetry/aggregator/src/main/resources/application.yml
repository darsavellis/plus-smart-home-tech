spring:
  application:
    name: aggregator

logging:
  level:
    ru.yandex.practicum.telemetry.aggregator: TRACE
    ru.yandex.practicum.kafka: TRACE
    org:
      springframework: INFO
      apache.kafka: WARN

aggregator:
  kafka:
    producerConfig:
      properties:
        bootstrap.servers: localhost:9092
        client.id: "telemetry.aggregator"
        key.serializer: org.apache.kafka.common.serialization.StringSerializer
        value.serializer: ru.yandex.practicum.kafka.serializer.GeneralAvroSerializer
      topics:
        snapshots-events: telemetry.snapshots.v1
    consumerConfig:
      properties:
        bootstrap.servers: localhost:9092
        group.id: "aggregator-consumer-group"
        key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value.deserializer: ru.yandex.practicum.kafka.deserializer.SensorEventDeserializer
        max.poll.records: 500
        fetch.min.bytes: 1
        fetch.max.wait.ms: 500
        enable.auto.commit: false
      topics:
        sensors-events: telemetry.sensors.v1
        hubs-events: telemetry.hubs.v1
        snapshots-events: telemetry.snapshots.v1

